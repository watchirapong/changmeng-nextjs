'use client';
import { useState, useEffect } from 'react';
import Link from 'next/link';
import { useParams } from 'next/navigation';

interface Article {
  id: string;
  title: string;
  content: string;
  category: string;
  author: string;
  date: string;
  readTime: string;
  tags: string[];
}

export default function KnowledgeCategory() {
  const params = useParams();
  const category = params.category as string;
  const [articles, setArticles] = useState<Article[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading articles based on category
    setTimeout(() => {
      const mockArticles = getMockArticles(category);
      setArticles(mockArticles);
      setLoading(false);
    }, 1000);
  }, [category]);

  const getMockArticles = (cat: string): Article[] => {
    const articlesByCategory: { [key: string]: Article[] } = {
      rice: [
        {
          id: '1',
          title: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏õ‡∏•‡∏π‡∏Å‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°‡∏°‡∏∞‡∏•‡∏¥‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏î‡∏µ',
          content: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°‡∏°‡∏∞‡∏•‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á ‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°‡∏°‡∏∞‡∏•‡∏¥‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏î‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ...',
          category: 'rice',
          author: '‡∏î‡∏£.‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
          date: '2024-01-15',
          readTime: '5 ‡∏ô‡∏≤‡∏ó‡∏µ',
          tags: ['‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°‡∏°‡∏∞‡∏•‡∏¥', '‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å', '‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï']
        },
        {
          id: '2',
          title: '‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ö‡∏à‡∏∏‡∏î‡πÉ‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß',
          content: '‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ö‡∏à‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏•‡∏î‡∏•‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ö‡∏à‡∏∏‡∏î‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≤‡∏ô‡∏ó‡∏≤‡∏ô...',
          category: 'rice',
          author: '‡∏î‡∏£.‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏û‡∏∑‡∏ä‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
          date: '2024-01-10',
          readTime: '3 ‡∏ô‡∏≤‡∏ó‡∏µ',
          tags: ['‡πÇ‡∏£‡∏Ñ‡∏û‡∏∑‡∏ä', '‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô', '‡∏Ç‡πâ‡∏≤‡∏ß']
        }
      ],
      vegetables: [
        {
          id: '3',
          title: '‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÇ‡∏û‡∏ô‡∏¥‡∏Å‡∏™‡πå',
          content: '‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÇ‡∏û‡∏ô‡∏¥‡∏Å‡∏™‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏™‡∏π‡∏á ‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏î‡∏¥‡∏ô...',
          category: 'vegetables',
          author: '‡∏î‡∏£.‡∏™‡∏°‡∏õ‡∏≠‡∏á ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£',
          date: '2024-01-12',
          readTime: '7 ‡∏ô‡∏≤‡∏ó‡∏µ',
          tags: ['‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á', '‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÇ‡∏û‡∏ô‡∏¥‡∏Å‡∏™‡πå', '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ']
        }
      ],
      fruits: [
        {
          id: '4',
          title: '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏ß‡∏ô‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏î‡∏µ',
          content: '‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏ß‡∏ô‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°...',
          category: 'fruits',
          author: '‡∏î‡∏£.‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡πÑ‡∏°‡πâ‡∏ú‡∏•',
          date: '2024-01-08',
          readTime: '6 ‡∏ô‡∏≤‡∏ó‡∏µ',
          tags: ['‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á', '‡πÑ‡∏°‡πâ‡∏ú‡∏•', '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•']
        }
      ]
    };

    return articlesByCategory[cat] || [];
  };

  const getCategoryTitle = (cat: string): string => {
    const titles: { [key: string]: string } = {
      rice: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≤‡∏ß',
      vegetables: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏±‡∏Å',
      fruits: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡πÑ‡∏°‡πâ',
      herbs: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£',
      fertilizer: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πã‡∏¢',
      pest: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡∏∑‡∏ä'
    };
    return titles[cat] || '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£';
  };

  const getCategoryIcon = (cat: string): string => {
    const icons: { [key: string]: string } = {
      rice: 'üåæ',
      vegetables: 'ü•¨',
      fruits: 'üçé',
      herbs: 'üåø',
      fertilizer: 'üå±',
      pest: 'üêõ'
    };
    return icons[cat] || 'üìö';
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-green-600 text-white shadow-lg">
          <div className="container mx-auto px-4 py-4">
            <div className="flex items-center space-x-3">
              <Link href="/knowledge" className="text-white hover:text-green-200">
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                </svg>
              </Link>
              <h1 className="text-xl font-bold">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</h1>
            </div>
          </div>
        </div>
        <div className="container mx-auto px-4 py-6">
          <div className="animate-pulse">
            <div className="h-8 bg-gray-200 rounded w-1/3 mb-4"></div>
            <div className="space-y-4">
              {[1, 2, 3].map((i) => (
                <div key={i} className="bg-white p-6 rounded-lg shadow-md">
                  <div className="h-6 bg-gray-200 rounded w-3/4 mb-2"></div>
                  <div className="h-4 bg-gray-200 rounded w-1/2 mb-4"></div>
                  <div className="h-4 bg-gray-200 rounded w-full mb-2"></div>
                  <div className="h-4 bg-gray-200 rounded w-2/3"></div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-green-600 text-white shadow-lg">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Link href="/knowledge" className="text-white hover:text-green-200">
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                </svg>
              </Link>
              <div className="flex items-center space-x-2">
                <span className="text-2xl">{getCategoryIcon(category)}</span>
                <h1 className="text-xl font-bold">{getCategoryTitle(category)}</h1>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-6 max-w-4xl">
        {articles.length === 0 ? (
          <div className="bg-white rounded-lg shadow-md p-8 text-center">
            <div className="text-6xl mb-4">üìö</div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°</h3>
            <p className="text-gray-500 mb-6">‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ</p>
            <Link
              href="/knowledge"
              className="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
            >
              ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
            </Link>
          </div>
        ) : (
          <div className="space-y-6">
            {/* Category Description */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-lg font-semibold text-gray-900 mb-2">
                ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö{getCategoryTitle(category)}
              </h2>
              <p className="text-gray-600">
                ‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö{getCategoryTitle(category).toLowerCase()} 
                ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå
              </p>
            </div>

            {/* Articles */}
            <div className="space-y-4">
              {articles.map((article) => (
                <div key={article.id} className="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <h3 className="text-lg font-semibold text-gray-900 mb-2 hover:text-green-600 transition-colors cursor-pointer">
                        {article.title}
                      </h3>
                      <p className="text-gray-600 mb-4 line-clamp-3">
                        {article.content}
                      </p>
                      
                      {/* Tags */}
                      <div className="flex flex-wrap gap-2 mb-4">
                        {article.tags.map((tag, index) => (
                          <span
                            key={index}
                            className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full"
                          >
                            {tag}
                          </span>
                        ))}
                      </div>
                      
                      {/* Meta */}
                      <div className="flex items-center justify-between text-sm text-gray-500">
                        <div className="flex items-center space-x-4">
                          <span>‡πÇ‡∏î‡∏¢ {article.author}</span>
                          <span>{new Date(article.date).toLocaleDateString('th-TH')}</span>
                          <span>‚è±Ô∏è {article.readTime}</span>
                        </div>
                        <button className="text-green-600 hover:text-green-700 font-medium">
                          ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‚Üí
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* Related Categories */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÜ</h3>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                {[
                  { id: 'rice', name: '‡∏Ç‡πâ‡∏≤‡∏ß', icon: 'üåæ' },
                  { id: 'vegetables', name: '‡∏ú‡∏±‡∏Å', icon: 'ü•¨' },
                  { id: 'fruits', name: '‡∏ú‡∏•‡πÑ‡∏°‡πâ', icon: 'üçé' },
                  { id: 'herbs', name: '‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£', icon: 'üåø' },
                  { id: 'fertilizer', name: '‡∏õ‡∏∏‡πã‡∏¢', icon: 'üå±' },
                  { id: 'pest', name: '‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡∏∑‡∏ä', icon: 'üêõ' }
                ].map((cat) => (
                  <Link
                    key={cat.id}
                    href={`/knowledge/${cat.id}`}
                    className={`p-4 rounded-lg border-2 text-center transition-colors ${
                      cat.id === category
                        ? 'border-green-500 bg-green-50 text-green-700'
                        : 'border-gray-200 hover:border-green-300 hover:bg-green-50'
                    }`}
                  >
                    <div className="text-2xl mb-2">{cat.icon}</div>
                    <div className="font-medium">{cat.name}</div>
                  </Link>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
